"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@sindresorhus+slugify@1.1.2";
exports.ids = ["vendor-chunks/@sindresorhus+slugify@1.1.2"];
exports.modules = {

/***/ "(rsc)/../../node_modules/.pnpm/@sindresorhus+slugify@1.1.2/node_modules/@sindresorhus/slugify/index.js":
/*!********************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@sindresorhus+slugify@1.1.2/node_modules/@sindresorhus/slugify/index.js ***!
  \********************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst escapeStringRegexp = __webpack_require__(/*! escape-string-regexp */ \"(rsc)/../../node_modules/.pnpm/escape-string-regexp@4.0.0/node_modules/escape-string-regexp/index.js\");\nconst transliterate = __webpack_require__(/*! @sindresorhus/transliterate */ \"(rsc)/../../node_modules/.pnpm/@sindresorhus+transliterate@0.1.2/node_modules/@sindresorhus/transliterate/index.js\");\nconst builtinOverridableReplacements = __webpack_require__(/*! ./overridable-replacements */ \"(rsc)/../../node_modules/.pnpm/@sindresorhus+slugify@1.1.2/node_modules/@sindresorhus/slugify/overridable-replacements.js\");\nconst decamelize = (string)=>{\n    return string// Separate capitalized words.\n    .replace(/([A-Z]{2,})(\\d+)/g, \"$1 $2\").replace(/([a-z\\d]+)([A-Z]{2,})/g, \"$1 $2\").replace(/([a-z\\d])([A-Z])/g, \"$1 $2\").replace(/([A-Z]+)([A-Z][a-z\\d]+)/g, \"$1 $2\");\n};\nconst removeMootSeparators = (string, separator)=>{\n    const escapedSeparator = escapeStringRegexp(separator);\n    return string.replace(new RegExp(`${escapedSeparator}{2,}`, \"g\"), separator).replace(new RegExp(`^${escapedSeparator}|${escapedSeparator}$`, \"g\"), \"\");\n};\nconst slugify = (string, options)=>{\n    if (typeof string !== \"string\") {\n        throw new TypeError(`Expected a string, got \\`${typeof string}\\``);\n    }\n    options = {\n        separator: \"-\",\n        lowercase: true,\n        decamelize: true,\n        customReplacements: [],\n        preserveLeadingUnderscore: false,\n        ...options\n    };\n    const shouldPrependUnderscore = options.preserveLeadingUnderscore && string.startsWith(\"_\");\n    const customReplacements = new Map([\n        ...builtinOverridableReplacements,\n        ...options.customReplacements\n    ]);\n    string = transliterate(string, {\n        customReplacements\n    });\n    if (options.decamelize) {\n        string = decamelize(string);\n    }\n    let patternSlug = /[^a-zA-Z\\d]+/g;\n    if (options.lowercase) {\n        string = string.toLowerCase();\n        patternSlug = /[^a-z\\d]+/g;\n    }\n    string = string.replace(patternSlug, options.separator);\n    string = string.replace(/\\\\/g, \"\");\n    if (options.separator) {\n        string = removeMootSeparators(string, options.separator);\n    }\n    if (shouldPrependUnderscore) {\n        string = `_${string}`;\n    }\n    return string;\n};\nconst counter = ()=>{\n    const occurrences = new Map();\n    const countable = (string, options)=>{\n        string = slugify(string, options);\n        if (!string) {\n            return \"\";\n        }\n        const stringLower = string.toLowerCase();\n        const numberless = occurrences.get(stringLower.replace(/(?:-\\d+?)+?$/, \"\")) || 0;\n        const counter = occurrences.get(stringLower);\n        occurrences.set(stringLower, typeof counter === \"number\" ? counter + 1 : 1);\n        const newCounter = occurrences.get(stringLower) || 2;\n        if (newCounter >= 2 || numberless > 2) {\n            string = `${string}-${newCounter}`;\n        }\n        return string;\n    };\n    countable.reset = ()=>{\n        occurrences.clear();\n    };\n    return countable;\n};\nmodule.exports = slugify;\nmodule.exports.counter = counter;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzaW5kcmVzb3JodXMrc2x1Z2lmeUAxLjEuMi9ub2RlX21vZHVsZXMvQHNpbmRyZXNvcmh1cy9zbHVnaWZ5L2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsTUFBTUEscUJBQXFCQyxtQkFBT0EsQ0FBQztBQUNuQyxNQUFNQyxnQkFBZ0JELG1CQUFPQSxDQUFDO0FBQzlCLE1BQU1FLGlDQUFpQ0YsbUJBQU9BLENBQUM7QUFFL0MsTUFBTUcsYUFBYUMsQ0FBQUE7SUFDbEIsT0FBT0EsTUFDTiw4QkFBOEI7S0FDN0JDLE9BQU8sQ0FBQyxxQkFBcUIsU0FDN0JBLE9BQU8sQ0FBQywwQkFBMEIsU0FFbENBLE9BQU8sQ0FBQyxxQkFBcUIsU0FDN0JBLE9BQU8sQ0FBQyw0QkFBNEI7QUFDdkM7QUFFQSxNQUFNQyx1QkFBdUIsQ0FBQ0YsUUFBUUc7SUFDckMsTUFBTUMsbUJBQW1CVCxtQkFBbUJRO0lBRTVDLE9BQU9ILE9BQ0xDLE9BQU8sQ0FBQyxJQUFJSSxPQUFPLENBQUMsRUFBRUQsaUJBQWlCLElBQUksQ0FBQyxFQUFFLE1BQU1ELFdBQ3BERixPQUFPLENBQUMsSUFBSUksT0FBTyxDQUFDLENBQUMsRUFBRUQsaUJBQWlCLENBQUMsRUFBRUEsaUJBQWlCLENBQUMsQ0FBQyxFQUFFLE1BQU07QUFDekU7QUFFQSxNQUFNRSxVQUFVLENBQUNOLFFBQVFPO0lBQ3hCLElBQUksT0FBT1AsV0FBVyxVQUFVO1FBQy9CLE1BQU0sSUFBSVEsVUFBVSxDQUFDLHlCQUF5QixFQUFFLE9BQU9SLE9BQU8sRUFBRSxDQUFDO0lBQ2xFO0lBRUFPLFVBQVU7UUFDVEosV0FBVztRQUNYTSxXQUFXO1FBQ1hWLFlBQVk7UUFDWlcsb0JBQW9CLEVBQUU7UUFDdEJDLDJCQUEyQjtRQUMzQixHQUFHSixPQUFPO0lBQ1g7SUFFQSxNQUFNSywwQkFBMEJMLFFBQVFJLHlCQUF5QixJQUFJWCxPQUFPYSxVQUFVLENBQUM7SUFFdkYsTUFBTUgscUJBQXFCLElBQUlJLElBQUk7V0FDL0JoQjtXQUNBUyxRQUFRRyxrQkFBa0I7S0FDN0I7SUFFRFYsU0FBU0gsY0FBY0csUUFBUTtRQUFDVTtJQUFrQjtJQUVsRCxJQUFJSCxRQUFRUixVQUFVLEVBQUU7UUFDdkJDLFNBQVNELFdBQVdDO0lBQ3JCO0lBRUEsSUFBSWUsY0FBYztJQUVsQixJQUFJUixRQUFRRSxTQUFTLEVBQUU7UUFDdEJULFNBQVNBLE9BQU9nQixXQUFXO1FBQzNCRCxjQUFjO0lBQ2Y7SUFFQWYsU0FBU0EsT0FBT0MsT0FBTyxDQUFDYyxhQUFhUixRQUFRSixTQUFTO0lBQ3RESCxTQUFTQSxPQUFPQyxPQUFPLENBQUMsT0FBTztJQUMvQixJQUFJTSxRQUFRSixTQUFTLEVBQUU7UUFDdEJILFNBQVNFLHFCQUFxQkYsUUFBUU8sUUFBUUosU0FBUztJQUN4RDtJQUVBLElBQUlTLHlCQUF5QjtRQUM1QlosU0FBUyxDQUFDLENBQUMsRUFBRUEsT0FBTyxDQUFDO0lBQ3RCO0lBRUEsT0FBT0E7QUFDUjtBQUVBLE1BQU1pQixVQUFVO0lBQ2YsTUFBTUMsY0FBYyxJQUFJSjtJQUV4QixNQUFNSyxZQUFZLENBQUNuQixRQUFRTztRQUMxQlAsU0FBU00sUUFBUU4sUUFBUU87UUFFekIsSUFBSSxDQUFDUCxRQUFRO1lBQ1osT0FBTztRQUNSO1FBRUEsTUFBTW9CLGNBQWNwQixPQUFPZ0IsV0FBVztRQUN0QyxNQUFNSyxhQUFhSCxZQUFZSSxHQUFHLENBQUNGLFlBQVluQixPQUFPLENBQUMsZ0JBQWdCLFFBQVE7UUFDL0UsTUFBTWdCLFVBQVVDLFlBQVlJLEdBQUcsQ0FBQ0Y7UUFDaENGLFlBQVlLLEdBQUcsQ0FBQ0gsYUFBYSxPQUFPSCxZQUFZLFdBQVdBLFVBQVUsSUFBSTtRQUN6RSxNQUFNTyxhQUFhTixZQUFZSSxHQUFHLENBQUNGLGdCQUFnQjtRQUNuRCxJQUFJSSxjQUFjLEtBQUtILGFBQWEsR0FBRztZQUN0Q3JCLFNBQVMsQ0FBQyxFQUFFQSxPQUFPLENBQUMsRUFBRXdCLFdBQVcsQ0FBQztRQUNuQztRQUVBLE9BQU94QjtJQUNSO0lBRUFtQixVQUFVTSxLQUFLLEdBQUc7UUFDakJQLFlBQVlRLEtBQUs7SUFDbEI7SUFFQSxPQUFPUDtBQUNSO0FBRUFRLE9BQU9DLE9BQU8sR0FBR3RCO0FBQ2pCcUIsc0JBQXNCLEdBQUdWIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8va2V5c3RhdGljLXN0YXJ0ZXIvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzaW5kcmVzb3JodXMrc2x1Z2lmeUAxLjEuMi9ub2RlX21vZHVsZXMvQHNpbmRyZXNvcmh1cy9zbHVnaWZ5L2luZGV4LmpzPzhmOWMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuY29uc3QgZXNjYXBlU3RyaW5nUmVnZXhwID0gcmVxdWlyZSgnZXNjYXBlLXN0cmluZy1yZWdleHAnKTtcbmNvbnN0IHRyYW5zbGl0ZXJhdGUgPSByZXF1aXJlKCdAc2luZHJlc29yaHVzL3RyYW5zbGl0ZXJhdGUnKTtcbmNvbnN0IGJ1aWx0aW5PdmVycmlkYWJsZVJlcGxhY2VtZW50cyA9IHJlcXVpcmUoJy4vb3ZlcnJpZGFibGUtcmVwbGFjZW1lbnRzJyk7XG5cbmNvbnN0IGRlY2FtZWxpemUgPSBzdHJpbmcgPT4ge1xuXHRyZXR1cm4gc3RyaW5nXG5cdFx0Ly8gU2VwYXJhdGUgY2FwaXRhbGl6ZWQgd29yZHMuXG5cdFx0LnJlcGxhY2UoLyhbQS1aXXsyLH0pKFxcZCspL2csICckMSAkMicpXG5cdFx0LnJlcGxhY2UoLyhbYS16XFxkXSspKFtBLVpdezIsfSkvZywgJyQxICQyJylcblxuXHRcdC5yZXBsYWNlKC8oW2EtelxcZF0pKFtBLVpdKS9nLCAnJDEgJDInKVxuXHRcdC5yZXBsYWNlKC8oW0EtWl0rKShbQS1aXVthLXpcXGRdKykvZywgJyQxICQyJyk7XG59O1xuXG5jb25zdCByZW1vdmVNb290U2VwYXJhdG9ycyA9IChzdHJpbmcsIHNlcGFyYXRvcikgPT4ge1xuXHRjb25zdCBlc2NhcGVkU2VwYXJhdG9yID0gZXNjYXBlU3RyaW5nUmVnZXhwKHNlcGFyYXRvcik7XG5cblx0cmV0dXJuIHN0cmluZ1xuXHRcdC5yZXBsYWNlKG5ldyBSZWdFeHAoYCR7ZXNjYXBlZFNlcGFyYXRvcn17Mix9YCwgJ2cnKSwgc2VwYXJhdG9yKVxuXHRcdC5yZXBsYWNlKG5ldyBSZWdFeHAoYF4ke2VzY2FwZWRTZXBhcmF0b3J9fCR7ZXNjYXBlZFNlcGFyYXRvcn0kYCwgJ2cnKSwgJycpO1xufTtcblxuY29uc3Qgc2x1Z2lmeSA9IChzdHJpbmcsIG9wdGlvbnMpID0+IHtcblx0aWYgKHR5cGVvZiBzdHJpbmcgIT09ICdzdHJpbmcnKSB7XG5cdFx0dGhyb3cgbmV3IFR5cGVFcnJvcihgRXhwZWN0ZWQgYSBzdHJpbmcsIGdvdCBcXGAke3R5cGVvZiBzdHJpbmd9XFxgYCk7XG5cdH1cblxuXHRvcHRpb25zID0ge1xuXHRcdHNlcGFyYXRvcjogJy0nLFxuXHRcdGxvd2VyY2FzZTogdHJ1ZSxcblx0XHRkZWNhbWVsaXplOiB0cnVlLFxuXHRcdGN1c3RvbVJlcGxhY2VtZW50czogW10sXG5cdFx0cHJlc2VydmVMZWFkaW5nVW5kZXJzY29yZTogZmFsc2UsXG5cdFx0Li4ub3B0aW9uc1xuXHR9O1xuXG5cdGNvbnN0IHNob3VsZFByZXBlbmRVbmRlcnNjb3JlID0gb3B0aW9ucy5wcmVzZXJ2ZUxlYWRpbmdVbmRlcnNjb3JlICYmIHN0cmluZy5zdGFydHNXaXRoKCdfJyk7XG5cblx0Y29uc3QgY3VzdG9tUmVwbGFjZW1lbnRzID0gbmV3IE1hcChbXG5cdFx0Li4uYnVpbHRpbk92ZXJyaWRhYmxlUmVwbGFjZW1lbnRzLFxuXHRcdC4uLm9wdGlvbnMuY3VzdG9tUmVwbGFjZW1lbnRzXG5cdF0pO1xuXG5cdHN0cmluZyA9IHRyYW5zbGl0ZXJhdGUoc3RyaW5nLCB7Y3VzdG9tUmVwbGFjZW1lbnRzfSk7XG5cblx0aWYgKG9wdGlvbnMuZGVjYW1lbGl6ZSkge1xuXHRcdHN0cmluZyA9IGRlY2FtZWxpemUoc3RyaW5nKTtcblx0fVxuXG5cdGxldCBwYXR0ZXJuU2x1ZyA9IC9bXmEtekEtWlxcZF0rL2c7XG5cblx0aWYgKG9wdGlvbnMubG93ZXJjYXNlKSB7XG5cdFx0c3RyaW5nID0gc3RyaW5nLnRvTG93ZXJDYXNlKCk7XG5cdFx0cGF0dGVyblNsdWcgPSAvW15hLXpcXGRdKy9nO1xuXHR9XG5cblx0c3RyaW5nID0gc3RyaW5nLnJlcGxhY2UocGF0dGVyblNsdWcsIG9wdGlvbnMuc2VwYXJhdG9yKTtcblx0c3RyaW5nID0gc3RyaW5nLnJlcGxhY2UoL1xcXFwvZywgJycpO1xuXHRpZiAob3B0aW9ucy5zZXBhcmF0b3IpIHtcblx0XHRzdHJpbmcgPSByZW1vdmVNb290U2VwYXJhdG9ycyhzdHJpbmcsIG9wdGlvbnMuc2VwYXJhdG9yKTtcblx0fVxuXG5cdGlmIChzaG91bGRQcmVwZW5kVW5kZXJzY29yZSkge1xuXHRcdHN0cmluZyA9IGBfJHtzdHJpbmd9YDtcblx0fVxuXG5cdHJldHVybiBzdHJpbmc7XG59O1xuXG5jb25zdCBjb3VudGVyID0gKCkgPT4ge1xuXHRjb25zdCBvY2N1cnJlbmNlcyA9IG5ldyBNYXAoKTtcblxuXHRjb25zdCBjb3VudGFibGUgPSAoc3RyaW5nLCBvcHRpb25zKSA9PiB7XG5cdFx0c3RyaW5nID0gc2x1Z2lmeShzdHJpbmcsIG9wdGlvbnMpO1xuXG5cdFx0aWYgKCFzdHJpbmcpIHtcblx0XHRcdHJldHVybiAnJztcblx0XHR9XG5cblx0XHRjb25zdCBzdHJpbmdMb3dlciA9IHN0cmluZy50b0xvd2VyQ2FzZSgpO1xuXHRcdGNvbnN0IG51bWJlcmxlc3MgPSBvY2N1cnJlbmNlcy5nZXQoc3RyaW5nTG93ZXIucmVwbGFjZSgvKD86LVxcZCs/KSs/JC8sICcnKSkgfHwgMDtcblx0XHRjb25zdCBjb3VudGVyID0gb2NjdXJyZW5jZXMuZ2V0KHN0cmluZ0xvd2VyKTtcblx0XHRvY2N1cnJlbmNlcy5zZXQoc3RyaW5nTG93ZXIsIHR5cGVvZiBjb3VudGVyID09PSAnbnVtYmVyJyA/IGNvdW50ZXIgKyAxIDogMSk7XG5cdFx0Y29uc3QgbmV3Q291bnRlciA9IG9jY3VycmVuY2VzLmdldChzdHJpbmdMb3dlcikgfHwgMjtcblx0XHRpZiAobmV3Q291bnRlciA+PSAyIHx8IG51bWJlcmxlc3MgPiAyKSB7XG5cdFx0XHRzdHJpbmcgPSBgJHtzdHJpbmd9LSR7bmV3Q291bnRlcn1gO1xuXHRcdH1cblxuXHRcdHJldHVybiBzdHJpbmc7XG5cdH07XG5cblx0Y291bnRhYmxlLnJlc2V0ID0gKCkgPT4ge1xuXHRcdG9jY3VycmVuY2VzLmNsZWFyKCk7XG5cdH07XG5cblx0cmV0dXJuIGNvdW50YWJsZTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gc2x1Z2lmeTtcbm1vZHVsZS5leHBvcnRzLmNvdW50ZXIgPSBjb3VudGVyO1xuIl0sIm5hbWVzIjpbImVzY2FwZVN0cmluZ1JlZ2V4cCIsInJlcXVpcmUiLCJ0cmFuc2xpdGVyYXRlIiwiYnVpbHRpbk92ZXJyaWRhYmxlUmVwbGFjZW1lbnRzIiwiZGVjYW1lbGl6ZSIsInN0cmluZyIsInJlcGxhY2UiLCJyZW1vdmVNb290U2VwYXJhdG9ycyIsInNlcGFyYXRvciIsImVzY2FwZWRTZXBhcmF0b3IiLCJSZWdFeHAiLCJzbHVnaWZ5Iiwib3B0aW9ucyIsIlR5cGVFcnJvciIsImxvd2VyY2FzZSIsImN1c3RvbVJlcGxhY2VtZW50cyIsInByZXNlcnZlTGVhZGluZ1VuZGVyc2NvcmUiLCJzaG91bGRQcmVwZW5kVW5kZXJzY29yZSIsInN0YXJ0c1dpdGgiLCJNYXAiLCJwYXR0ZXJuU2x1ZyIsInRvTG93ZXJDYXNlIiwiY291bnRlciIsIm9jY3VycmVuY2VzIiwiY291bnRhYmxlIiwic3RyaW5nTG93ZXIiLCJudW1iZXJsZXNzIiwiZ2V0Iiwic2V0IiwibmV3Q291bnRlciIsInJlc2V0IiwiY2xlYXIiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/.pnpm/@sindresorhus+slugify@1.1.2/node_modules/@sindresorhus/slugify/index.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/.pnpm/@sindresorhus+slugify@1.1.2/node_modules/@sindresorhus/slugify/overridable-replacements.js":
/*!***************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@sindresorhus+slugify@1.1.2/node_modules/@sindresorhus/slugify/overridable-replacements.js ***!
  \***************************************************************************************************************************/
/***/ ((module) => {

eval("\nmodule.exports = [\n    [\n        \"&\",\n        \" and \"\n    ],\n    [\n        \"\\uD83E\\uDD84\",\n        \" unicorn \"\n    ],\n    [\n        \"♥\",\n        \" love \"\n    ]\n];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzaW5kcmVzb3JodXMrc2x1Z2lmeUAxLjEuMi9ub2RlX21vZHVsZXMvQHNpbmRyZXNvcmh1cy9zbHVnaWZ5L292ZXJyaWRhYmxlLXJlcGxhY2VtZW50cy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUc7SUFDaEI7UUFBQztRQUFLO0tBQVE7SUFDZDtRQUFDO1FBQU07S0FBWTtJQUNuQjtRQUFDO1FBQUs7S0FBUztDQUNmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8va2V5c3RhdGljLXN0YXJ0ZXIvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzaW5kcmVzb3JodXMrc2x1Z2lmeUAxLjEuMi9ub2RlX21vZHVsZXMvQHNpbmRyZXNvcmh1cy9zbHVnaWZ5L292ZXJyaWRhYmxlLXJlcGxhY2VtZW50cy5qcz83N2FhIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxubW9kdWxlLmV4cG9ydHMgPSBbXG5cdFsnJicsICcgYW5kICddLFxuXHRbJ/CfpoQnLCAnIHVuaWNvcm4gJ10sXG5cdFsn4pmlJywgJyBsb3ZlICddXG5dO1xuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/.pnpm/@sindresorhus+slugify@1.1.2/node_modules/@sindresorhus/slugify/overridable-replacements.js\n");

/***/ })

};
;